/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react'
import { useGLTF, Html } from '@react-three/drei'
import { useThree } from '@react-three/fiber'

export function City3d(props) {
  const { nodes, materials } = useGLTF('/model3D/city.glb')
  const [clickedObject, setClickedObject] = useState(null) // Para guardar el objeto clickeado

  // Función para manejar los clics
  const handleClick = (e, objectName) => {
    e.stopPropagation() // Evita que el clic afecte otros elementos
    const position = e.object.position // Obtiene la posición del objeto clickeado
    setClickedObject({ name: objectName, position }) // Actualiza el estado con la información del objeto
  }
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Bottels2"
          castShadow
          receiveShadow
          geometry={nodes.Bottels2.geometry}
          material={materials.BottlesMaterial}
          userData={{ name: 'Bottels2' }}
        />
        <mesh
          name="Bottles1"
          castShadow
          receiveShadow
          geometry={nodes.Bottles1.geometry}
          material={materials.BottlesMaterial}
          userData={{ name: 'Bottles1' }}
        />
        <group name="Builidings" userData={{ name: 'Builidings' }}>
          <mesh
            name="Builidings_1"
            castShadow
            receiveShadow
            geometry={nodes.Builidings_1.geometry}
            material={materials.MaterialBlack}
          />
          <mesh
            name="Builidings_2"
            castShadow
            receiveShadow
            geometry={nodes.Builidings_2.geometry}
            material={materials.MaterialAzul}
          />
          <mesh
            name="Builidings_3"
            castShadow
            receiveShadow
            geometry={nodes.Builidings_3.geometry}
            material={materials.MaterialPink}
          />
          <mesh
            name="Builidings_4"
            castShadow
            receiveShadow
            geometry={nodes.Builidings_4.geometry}
            material={materials.MaterialWhite}
            onClick={(e) => handleClick(e, 'Los residuos en descomposición liberan gases como metano y dióxido de carbono, contribuyendo al cambio climático y a la contaminación del aire. En áreas con residuos acumulados, este problema se agrava.')} // Pasa el nombre directamente
          />
        </group>
        <mesh
          name="Cajas1"
          castShadow
          receiveShadow
          geometry={nodes.Cajas1.geometry}
          material={materials.BoxesMaterial}
          userData={{ name: 'Cajas1' }}
          onClick={(e) => handleClick(e, 'Los residuos en descomposición liberan gases como metano y dióxido de carbono, contribuyendo al cambio climático y a la contaminación del aire. En áreas con residuos acumulados, este problema se agrava.')} // Pasa el nombre directamente
        />
        <mesh
          name="Cajas2"
          castShadow
          receiveShadow
          geometry={nodes.Cajas2.geometry}
          material={materials.BoxesMaterial}
          userData={{ name: 'Cajas2' }}
          onClick={(e) => handleClick(e, ' Los residuos no gestionados correctamente liberan toxinas que se filtran en el suelo, afectando la calidad de la tierra y reduciendo su fertilidad. Esto daña a plantas, animales y afecta la producción agrícola.')} // Pasa el nombre directamente
        />
        <mesh
          name="Cart"
          castShadow
          receiveShadow
          geometry={nodes.Cart.geometry}
          material={materials.CartMaterial}
          userData={{ name: 'Cart' }}
        />
        <mesh
          name="EggCarton"
          castShadow
          receiveShadow
          geometry={nodes.EggCarton.geometry}
          material={materials.EggMaterial}
          userData={{ name: 'EggCarton' }}
          onClick={(e) => handleClick(e, 'Si no se almacena correctamente los residuos filosos los daños a los animales en busca de comida puede ser muy grande')} // Pasa el nombre directamente
        />
        <group name="Ground" userData={{ name: 'Ground' }}>
          <mesh
            name="Ground_1"
            castShadow
            receiveShadow
            geometry={nodes.Ground_1.geometry}
            material={materials.MaterialBlackFloor}
            onClick={(e) => handleClick(e, 'La acumulación de basura en áreas abiertas atrae roedores, insectos y otras plagas, lo que aumenta la propagación de enfermedades y afecta la higiene y salud de las comunidades cercanas.')} // Pasa el nombre directamente
          />
          <mesh
            name="Ground_2"
            castShadow
            receiveShadow
            geometry={nodes.Ground_2.geometry}
            material={materials.MaterialWhiteFloor}
            onClick={(e) => handleClick(e, 'La acumulación de basura en la tierra degrada los paisajes naturales, afectando el valor estético y turístico de muchas áreas. La pérdida de espacios naturales afecta la biodiversidad y el bienestar de las comunidades.')} // Pasa el nombre directamente
          />


          {clickedObject && clickedObject.position && (
            <Html
              position={[clickedObject.position.x, clickedObject.position.y + 1, clickedObject.position.z]}
              center
              style={
                {
                  width: 550,
                  top: -200
                }
              }
            >
              <div style={{
                background: 'rgba(255, 255, 255, 0.8)',
                padding: '10px',
                borderRadius: '8px',
                boxShadow: '0 4px 8px rgba(0, 0, 0, 0.3)',
                width: '200px',
                textAlign: 'center'
              }}>
                
                <p>{clickedObject.name}</p>
              </div>
            </Html>
          )}


        </group>
        <mesh
          name="Pallet1"
          castShadow
          receiveShadow
          geometry={nodes.Pallet1.geometry}
          material={materials.BoxesMaterial}
          userData={{ name: 'Pallet1' }}
        />
        <mesh
          name="Pallet2"
          castShadow
          receiveShadow
          geometry={nodes.Pallet2.geometry}
          material={materials.BoxesMaterial}
          userData={{ name: 'Pallet2' }}
        />
        <mesh
          name="PlasticBottles"
          castShadow
          receiveShadow
          geometry={nodes.PlasticBottles.geometry}
          material={materials.Plastic_Bottles}
          userData={{ name: 'PlasticBottles' }}
        />
        <mesh
          name="WasteBasket1"
          castShadow
          receiveShadow
          geometry={nodes.WasteBasket1.geometry}
          material={materials.WasteMaterial}
          userData={{ name: 'WasteBasket1' }}
        />
        <mesh
          name="WasteBasket2"
          castShadow
          receiveShadow
          geometry={nodes.WasteBasket2.geometry}
          material={materials.WasteMaterial}
          userData={{ name: 'WasteBasket2' }}
        />
        <mesh
          name="WasteBasket3"
          castShadow
          receiveShadow
          geometry={nodes.WasteBasket3.geometry}
          material={materials.WasteMaterial}
          userData={{ name: 'WasteBasket3' }}
        />

        <mesh
          name="WasteBasket4"
          castShadow
          receiveShadow
          geometry={nodes.WasteBasket4.geometry}
          material={materials.WasteMaterial}
          userData={{ name: 'WasteBasket4' }}
        />
      </group>
    </group>
  )
}


useGLTF.preload('/model3D/city.glb')
export default City3d;



